    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.03s
     Running `target/debug/rascii`
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
        ],
    ),
    (
        0,
        [
            'D',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
        ],
    ),
    (
        0,
        [
            'f',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
        ],
    ),
    (
        0,
        [
            'S',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
        ],
    ),
    (
        0,
        [
            'K',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
        ],
    ),
    (
        0,
        [
            'v',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
        ],
    ),
    (
        0,
        [
            '2',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
        ],
    ),
    (
        0,
        [
            'P',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
        ],
    ),
    (
        0,
        [
            'T',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '\n',
            '+',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '\n',
            '+',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'L',
        ],
    ),
    (
        0,
        [
            'L',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '\n',
            '+',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'L',
            'L',
            'i',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '\n',
            '+',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'L',
            'L',
            'i',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'I',
        ],
    ),
    (
        0,
        [
            'I',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '\n',
            '+',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'L',
            'L',
            'i',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'I',
            'I',
            't',
            'e',
            'm',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '\n',
            '+',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'L',
            'L',
            'i',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'I',
            'I',
            't',
            'e',
            'm',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            '1',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '\n',
            '+',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'L',
            'L',
            'i',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'I',
            'I',
            't',
            'e',
            'm',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            '1',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '*',
        ],
    ),
    (
        0,
        [
            '*',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '\n',
            '+',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'L',
            'L',
            'i',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'I',
            'I',
            't',
            'e',
            'm',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            '1',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '*',
        ],
    ),
    (
        0,
        [
            '*',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
]
[src/checkpoint_iterator.rs:123:17] &self.inner.stack = [
    (
        0,
        [
            '\n',
            '\n',
            '\n',
            '=',
        ],
    ),
    (
        0,
        [
            '=',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'T',
            'e',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'D',
            'D',
            'o',
            'c',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'f',
            'f',
            'o',
            'r',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'p',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'S',
            'S',
            'a',
            'n',
            'd',
            'y',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'K',
            'K',
            'm',
            'r',
            '1',
            ';',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'K',
            'B',
            'S',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
    (
        0,
        [
            'v',
            'v',
            '9',
            '.',
            '1',
            ',',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            '2',
            '2',
            '0',
            '2',
            '1',
            '-',
            '0',
            '9',
            '-',
            '0',
            '1',
            ':',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'I',
            'n',
            'i',
            't',
            'i',
            'a',
            'l',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'P',
            'P',
            'a',
            'r',
            's',
            'i',
            'n',
            'g',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'T',
            'T',
            'e',
            's',
            't',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '\n',
            '+',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'L',
            'L',
            'i',
            's',
            't',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
        ],
    ),
    (
        0,
        [
            'I',
            'I',
            't',
            'e',
            'm',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            '1',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
            '*',
        ],
    ),
    (
        0,
        [
            '*',
            ' ',
        ],
    ),
    (
        0,
        [
            ' ',
            'L',
            'i',
            's',
            't',
            ' ',
            'I',
            't',
            'e',
            'm',
            ' ',
            '2',
            '\n',
        ],
    ),
    (
        0,
        [
            '\n',
        ],
    ),
]
